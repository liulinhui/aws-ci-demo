name: Build Image Push Images

on:
  push:
    tags:
      - v*
    branches:
      - feat*
env:
  GITHUB_REGISTRY: ghcr.io
  AWS_ECR_NAMESPACE: 952758199057.dkr.ecr.ap-east-1.amazonaws.com
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata action
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.AWS_ECR_NAMESPACE }}/${{ env.IMAGE_NAME }}
            ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Render Amazon ECS task definition
        id: render-aws-ci-demo-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./ci/task-definition.json
          container-name: aws-ci-demo
          image: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-aws-ci-demo-container.outputs.task-definition }}
          service: aws-ci-demo-service
          cluster: amos-cluster
          wait-for-service-stability: true